{"version":3,"file":"static/webpack/static/development/pages/index.js.2166bcccf02737046bd8.hot-update.js","sources":["webpack:///./components/ResultRenderer.tsx"],"sourcesContent":["import { ListItemText, SvgIcon, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { Spell } from '../models/spell';\n\nexport const ResultRenderer: React.FunctionComponent<{type: string, data: any}> = (props) => {\n    const { data } = props;\n    switch (props.type) {\n        case 'spells':\n            const spell: Spell = data as Spell;\n            return (\n                <>\n                    <ListItemText\n                        primary=\"Brunch this weekend?\"\n                        secondary={\n                            <React.Fragment>\n                                <Typography\n                                    component=\"span\"\n                                    variant=\"body2\"\n                                    color=\"textPrimary\"\n                                >\n                                    {spell.name}\n                                </Typography>\n                                <p><strong>school:</strong> {spell.school}{spell.subschool ? ':'+spell.subschool : ''}</p>\n                                <p><strong>description:</strong> {spell.short_description}</p>\n                                <p><strong>level:</strong> {spell.spell_level}</p>\n                            </React.Fragment>\n                        }\n                    />\n                </>\n            );\n        case 'feats':\n            return <p>feat: {data.name}</p>\n        case 'monsters':\n            return <p>monster: {data.name}</p>\n        case 'items':\n            return <p>item: {data.name}</p>\n        default:\n        return null;\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAkBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AA/BA;AAiCA;;;;A","sourceRoot":""}