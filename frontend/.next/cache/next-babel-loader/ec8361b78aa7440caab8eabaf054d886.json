{"ast":null,"code":"var _jsxFileName = \"/Users/trevoratlas/projects/pathfinder-search/frontend/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\n\nconst Index = () => {\n  const {\n    0: type,\n    1: setType\n  } = useState('spells');\n  const {\n    0: query,\n    1: setQuery\n  } = useState('');\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      const result = await fetch(`http://localhost:8080?query=${query}&type=${type}`);\n      setData((await result.json()));\n      setIsLoading(false);\n    })();\n  }, [query, type]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    onChange: e => setQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }), __jsx(\"span\", {\n    onClick: () => setType('spells'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"spells\"), __jsx(\"span\", {\n    onClick: () => setType('feats'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"feats\"), __jsx(\"span\", {\n    onClick: () => setType('monsters'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"monsters\"), __jsx(\"span\", {\n    onClick: () => setType('items'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"items\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, isLoading ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, \"Loading ...\") : __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, data.map(datum => {\n    return __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 33\n      }\n    }, datum.name);\n  }))));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/trevoratlas/projects/pathfinder-search/frontend/pages/index.tsx"],"names":["React","useState","useEffect","Index","type","setType","query","setQuery","isLoading","setIsLoading","data","setData","result","fetch","json","e","target","value","map","datum","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBJ,QAAQ,CAAC,QAAD,CAAhC;AACA,QAAM;AAAA,OAACK,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACO,SAAD;AAAA,OAAYC;AAAZ,MAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACS,IAAD;AAAA,OAAOC;AAAP,MAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACTO,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMG,MAAM,GAAG,MAAMC,KAAK,CACrB,+BAA8BP,KAAM,SAAQF,IAAK,EAD5B,CAA1B;AAGAO,MAAAA,OAAO,EAAC,MAAMC,MAAM,CAACE,IAAP,EAAP,EAAP;AACAL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAPD;AAQH,GATQ,EASN,CAACH,KAAD,EAAQF,IAAR,CATM,CAAT;AAUA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAGW,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAM,IAAA,OAAO,EAAE,MAAMZ,OAAO,CAAC,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI;AAAM,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,OAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,EAII;AAAM,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,UAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAKI;AAAM,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,OAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,SAAS,GACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADM,GAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIE,IAAI,CAACQ,GAAL,CAAUC,KAAD,IAAW;AAChB,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAK,CAACC,IAAX,CADJ;AAGH,GAJD,CAFJ,CAJR,CANJ,CADJ;AAyBH,CAzCD;;AA2CA,eAAejB,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Index = () => {\n    const [type, setType] = useState('spells');\n    const [query, setQuery] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        (async () => {\n            setIsLoading(true);\n            const result = await fetch(\n                `http://localhost:8080?query=${query}&type=${type}`,\n            );\n            setData(await result.json());\n            setIsLoading(false);\n        })()\n    }, [query, type]);\n    return (\n        <div>\n            <input type=\"text\" onChange={(e) => setQuery(e.target.value)}/>\n            <span onClick={() => setType('spells')}>spells</span>\n            <span onClick={() => setType('feats')}>feats</span>\n            <span onClick={() => setType('monsters')}>monsters</span>\n            <span onClick={() => setType('items')}>items</span>\n            <div>\n                {isLoading ? (\n                    <div>Loading ...</div>\n                ) : (\n                    <ul>\n                        {\n                        data.map((datum) => {\n                            return (\n                                <li>{datum.name}</li>\n                            )\n                        })\n                        }\n                    </ul>\n                )}\n            </div>\n        </div>\n\n    )\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}