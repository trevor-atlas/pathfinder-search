{"ast":null,"code":"var _jsxFileName = \"/Users/trevoratlas/projects/pathfinder-search/frontend/components/VirtualizedList.tsx\";\nvar __jsx = React.createElement;\nimport { ResultRenderer } from '../components/ResultRenderer';\nimport React from 'react';\nimport { createStyles, ListItem } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { FixedSizeList } from 'react-window';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    width: '100%',\n    height: 400,\n    maxWidth: 300,\n    backgroundColor: '#ddd'\n  }\n}));\n\nfunction renderRow(props) {\n  const {\n    index,\n    style\n  } = props;\n  return __jsx(ListItem, {\n    button: true,\n    style: style,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(ResultRenderer, {\n    type: props.type,\n    data: props.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport const VirtualizedList = props => {\n  const classes = useStyles();\n  const {\n    itemData\n  } = props;\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(FixedSizeList, {\n    height: 400,\n    width: 300,\n    itemSize: 50,\n    itemCount: itemData.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, renderRow));\n};","map":{"version":3,"sources":["/Users/trevoratlas/projects/pathfinder-search/frontend/components/VirtualizedList.tsx"],"names":["ResultRenderer","React","createStyles","ListItem","makeStyles","FixedSizeList","useStyles","theme","root","width","height","maxWidth","backgroundColor","renderRow","props","index","style","type","data","VirtualizedList","classes","itemData","length"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,8BAA/B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAqD,mBAArD;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,aAAT,QAAuD,cAAvD;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,IACzBL,YAAY,CAAC;AACTM,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEFC,IAAAA,MAAM,EAAE,GAFN;AAGFC,IAAAA,QAAQ,EAAE,GAHR;AAIFC,IAAAA,eAAe,EAAE;AAJf;AADG,CAAD,CADY,CAA5B;;AAUA,SAASC,SAAT,CAAmBC,KAAnB,EAAmD;AAC/C,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBF,KAAzB;AAEA,SACI,MAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAiB,IAAA,KAAK,EAAEE,KAAxB;AAA+B,IAAA,GAAG,EAAED,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,cAAD;AAAgB,IAAA,IAAI,EAAED,KAAK,CAACG,IAA5B;AAAkC,IAAA,IAAI,EAAEH,KAAK,CAACI,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH;;AACD,OAAO,MAAMC,eAA2E,GAAIL,KAAD,IAAW;AAClG,QAAMM,OAAO,GAAGd,SAAS,EAAzB;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAeP,KAArB;AAEA,SACI;AAAK,IAAA,SAAS,EAAEM,OAAO,CAACZ,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,MAAM,EAAE,GAAvB;AAA4B,IAAA,KAAK,EAAE,GAAnC;AAAwC,IAAA,QAAQ,EAAE,EAAlD;AAAsD,IAAA,SAAS,EAAEa,QAAQ,CAACC,MAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,SADL,CADJ,CADJ;AAOH,CAXM","sourcesContent":["import { ResultRenderer } from '../components/ResultRenderer';\nimport { ReactComponentLike } from 'prop-types';\nimport React from 'react';\nimport { createStyles, ListItem, ListItemText } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { FixedSizeList, ListChildComponentProps } from 'react-window';\n\nconst useStyles = makeStyles((theme: any) =>\n    createStyles({\n        root: {\n            width: '100%',\n            height: 400,\n            maxWidth: 300,\n            backgroundColor: '#ddd'\n        },\n    }),\n);\nfunction renderRow(props: ListChildComponentProps) {\n    const { index, style } = props;\n\n    return (\n        <ListItem button style={style} key={index}>\n            <ResultRenderer type={props.type} data={props.data}/>\n        </ListItem>\n    );\n}\nexport const VirtualizedList: React.FunctionComponent<{type: string; itemData: any[]; }> = (props) => {\n    const classes = useStyles();\n    const { itemData } = props;\n\n    return (\n        <div className={classes.root}>\n            <FixedSizeList height={400} width={300} itemSize={50} itemCount={itemData.length}>\n                {renderRow}\n            </FixedSizeList>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}