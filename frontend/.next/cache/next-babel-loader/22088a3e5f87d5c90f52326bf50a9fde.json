{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/trevoratlas/projects/pathfinder-search/frontend/pages/index.tsx\";\n\nvar __jsx = React.createElement;\nimport { AppBar, FormControl, FormControlLabel, FormLabel, IconButton, InputBase, Radio, RadioGroup, Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { VirtualizedList } from '../components/VirtualizedList';\nimport React, { useState, useEffect } from 'react';\nimport { useDebounce } from '../utils/debounce';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      '& > *': {\n        // @ts-ignore\n        width: '25ch'\n      }\n    },\n    menuButton: {\n      marginRight: '1em'\n    },\n    title: {\n      flexGrow: 1,\n      display: 'none'\n    },\n    search: {\n      position: 'relative',\n      borderRadius: 20,\n      backgroundColor: '#eee',\n      '&:hover': {\n        backgroundColor: '#ddd'\n      },\n      marginLeft: 0,\n      width: '100%'\n    },\n    searchIcon: {\n      padding: '0 1em',\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: '#234599'\n    },\n    inputRoot: {},\n    inputInput: {\n      padding: '1em 1em 1em 0',\n      // vertical padding + font size from searchIcon\n      paddingLeft: \"calc(1em + 25px)\",\n      width: '100%'\n    }\n  };\n});\n\nvar Index = function Index() {\n  var classes = useStyles();\n\n  var _useState = useState('spells'),\n      type = _useState[0],\n      setType = _useState[1];\n\n  var _useState2 = useState(''),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var _useState3 = useState(false),\n      isLoading = _useState3[0],\n      setIsLoading = _useState3[1];\n\n  var _useState4 = useState({\n    results: [],\n    type: type\n  }),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var debouncedSearchTerm = useDebounce(query, 500);\n\n  var handleTypeChange = function handleTypeChange(event) {\n    setType(event.target.value);\n  };\n\n  useEffect(function () {\n    (function _callee() {\n      var result, _data;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!debouncedSearchTerm) {\n                _context.next = 12;\n                break;\n              }\n\n              setIsLoading(true);\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(\"http://localhost:8080?query=\".concat(query, \"&type=\").concat(type)));\n\n            case 4:\n              result = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(result.json());\n\n            case 7:\n              _data = _context.sent;\n              setData({\n                results: _data,\n                type: type\n              });\n              setIsLoading(false);\n              _context.next = 13;\n              break;\n\n            case 12:\n              setData({\n                results: [],\n                type: type\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, [debouncedSearchTerm, type]);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, __jsx(AppBar, {\n    position: \"static\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, __jsx(Toolbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, __jsx(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, __jsx(MenuIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  })), __jsx(Typography, {\n    className: classes.title,\n    variant: \"h6\",\n    noWrap: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, \"Material-UI\"), __jsx(\"div\", {\n    className: classes.search,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: classes.searchIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, __jsx(SearchIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  })), __jsx(InputBase, {\n    placeholder: \"Search\\u2026\",\n    onChange: function onChange(e) {\n      return setQuery(e.target.value);\n    },\n    classes: {\n      root: classes.inputRoot,\n      input: classes.inputInput\n    },\n    inputProps: {\n      'aria-label': 'search'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  })))), __jsx(FormControl, {\n    component: \"fieldset\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, __jsx(FormLabel, {\n    component: \"legend\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, \"Query Type\"), __jsx(RadioGroup, {\n    \"aria-label\": \"Query Type\",\n    name: \"gender1\",\n    value: type,\n    onChange: handleTypeChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, __jsx(FormControlLabel, {\n    value: \"feats\",\n    control: __jsx(Radio, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 62\n      }\n    }),\n    label: \"Feats\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }), __jsx(FormControlLabel, {\n    value: \"monsters\",\n    control: __jsx(Radio, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 65\n      }\n    }),\n    label: \"Monsters\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }), __jsx(FormControlLabel, {\n    value: \"spells\",\n    control: __jsx(Radio, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 63\n      }\n    }),\n    label: \"Spells\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }), __jsx(FormControlLabel, {\n    value: \"items\",\n    control: __jsx(Radio, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 62\n      }\n    }),\n    label: \"Items\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, isLoading ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, \"Loading ...\") : __jsx(VirtualizedList, {\n    itemData: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/trevoratlas/projects/pathfinder-search/frontend/pages/index.tsx"],"names":["AppBar","FormControl","FormControlLabel","FormLabel","IconButton","InputBase","Radio","RadioGroup","Toolbar","Typography","makeStyles","VirtualizedList","React","useState","useEffect","useDebounce","MenuIcon","SearchIcon","useStyles","theme","root","flexGrow","width","menuButton","marginRight","title","display","search","position","borderRadius","backgroundColor","marginLeft","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","color","inputRoot","inputInput","paddingLeft","Index","classes","type","setType","query","setQuery","isLoading","setIsLoading","results","data","setData","debouncedSearchTerm","handleTypeChange","event","target","value","fetch","result","json","e","input"],"mappings":"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","sourcesContent":["import {\n    AppBar,\n    FormControl,\n    FormControlLabel,\n    FormLabel, IconButton, InputBase,\n    Radio,\n    RadioGroup,\n    TextField, Toolbar, Typography\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { VirtualizedList } from '../components/VirtualizedList';\nimport React, { useState, useEffect } from 'react';\nimport { ResultRenderer } from '../components/ResultRenderer';\nimport { useDebounce } from '../utils/debounce';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        '& > *': {\n            // @ts-ignore\n            width: '25ch',\n        },\n    },\n    menuButton: {\n        marginRight: '1em'\n    },\n    title: {\n        flexGrow: 1,\n        display: 'none',\n    },\n    search: {\n        position: 'relative',\n        borderRadius: 20,\n        backgroundColor: '#eee',\n        '&:hover': {\n            backgroundColor: '#ddd',\n        },\n        marginLeft: 0,\n        width: '100%',\n    },\n    searchIcon: {\n        padding: '0 1em',\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: '#234599'\n    },\n    inputRoot: {\n    },\n\n    inputInput: {\n        padding: '1em 1em 1em 0',\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + 25px)`,\n        width: '100%',\n    },\n}));\n\nconst Index = () => {\n    const classes = useStyles();\n    const [type, setType] = useState('spells');\n    const [query, setQuery] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [data, setData] = useState({\n        results: [],\n        type\n    });\n\n    const debouncedSearchTerm = useDebounce(query, 500);\n\n    const handleTypeChange = (event) => {\n        setType(event.target.value);\n    };\n\n    useEffect(() => {\n        (async () => {\n            if (debouncedSearchTerm) {\n                setIsLoading(true);\n                const result = await fetch(`http://localhost:8080?query=${query}&type=${type}`);\n                const data = await result.json();\n\n                setData({\n                    results: data,\n                    type\n                });\n                setIsLoading(false);\n            } else {\n                setData({\n                    results: [],\n                    type\n                })\n            }\n        })()\n    }, [debouncedSearchTerm, type]);\n\n    return (\n        <div>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        Material-UI\n                    </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            onChange={(e) => setQuery(e.target.value)}\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </div>\n                </Toolbar>\n            </AppBar>\n\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Query Type</FormLabel>\n                <RadioGroup aria-label=\"Query Type\" name=\"gender1\" value={type} onChange={handleTypeChange}>\n                    <FormControlLabel value=\"feats\" control={<Radio />} label=\"Feats\" />\n                    <FormControlLabel value=\"monsters\" control={<Radio />} label=\"Monsters\" />\n                    <FormControlLabel value=\"spells\" control={<Radio />} label=\"Spells\" />\n                    <FormControlLabel value=\"items\" control={<Radio />} label=\"Items\" />\n                </RadioGroup>\n            </FormControl>\n            <div>\n                {isLoading ? (\n                    <div>Loading ...</div>\n                ) : (\n                    <VirtualizedList itemData={data} />\n                )}\n            </div>\n        </div>\n\n    )\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}