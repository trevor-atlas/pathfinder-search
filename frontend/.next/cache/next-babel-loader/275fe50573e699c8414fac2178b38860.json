{"ast":null,"code":"var _jsxFileName = \"/Users/trevoratlas/projects/pathfinder-search/frontend/components/ResultRenderer.tsx\";\nvar __jsx = React.createElement;\nimport { ListItemText, Typography } from '@material-ui/core';\nimport React from 'react';\nexport const ResultRenderer = props => {\n  const {\n    data\n  } = props;\n\n  switch (props.type) {\n    case 'spells':\n      const spell = data;\n      return __jsx(React.Fragment, null, __jsx(ListItemText, {\n        primary: \"Brunch this weekend?\",\n        secondary: __jsx(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 29\n          }\n        }, __jsx(Typography, {\n          component: \"span\",\n          variant: \"body2\",\n          color: \"textPrimary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 33\n          }\n        }, spell.name), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 33\n          }\n        }, __jsx(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 36\n          }\n        }, \"school:\"), \" \", spell.school, spell.subschool ? ':' + spell.subschool : ''), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 33\n          }\n        }, __jsx(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 36\n          }\n        }, \"description:\"), \" \", spell.short_description), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 33\n          }\n        }, __jsx(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 36\n          }\n        }, \"level:\"), \" \", spell.spell_level)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }\n      }));\n\n    case 'feats':\n      return __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 20\n        }\n      }, \"feat: \", data.name);\n\n    case 'monsters':\n      return __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }\n      }, \"monster: \", data.name);\n\n    case 'items':\n      return __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 20\n        }\n      }, \"item: \", data.name);\n\n    default:\n      return null;\n  }\n};","map":{"version":3,"sources":["/Users/trevoratlas/projects/pathfinder-search/frontend/components/ResultRenderer.tsx"],"names":["ListItemText","Typography","React","ResultRenderer","props","data","type","spell","name","school","subschool","short_description","spell_level"],"mappings":";;AAAA,SAASA,YAAT,EAAgCC,UAAhC,QAAkD,mBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,cAAkE,GAAIC,KAAD,IAAW;AACzF,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;;AACA,UAAQA,KAAK,CAACE,IAAd;AACI,SAAK,QAAL;AACI,YAAMC,KAAY,GAAGF,IAArB;AACA,aACI,4BACI,MAAC,YAAD;AACI,QAAA,OAAO,EAAC,sBADZ;AAEI,QAAA,SAAS,EACL,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,UAAD;AACI,UAAA,SAAS,EAAC,MADd;AAEI,UAAA,OAAO,EAAC,OAFZ;AAGI,UAAA,KAAK,EAAC,aAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKKE,KAAK,CAACC,IALX,CADJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAH,OAA6BD,KAAK,CAACE,MAAnC,EAA2CF,KAAK,CAACG,SAAN,GAAkB,MAAIH,KAAK,CAACG,SAA5B,GAAwC,EAAnF,CARJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAH,OAAkCH,KAAK,CAACI,iBAAxC,CATJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAH,OAA4BJ,KAAK,CAACK,WAAlC,CAVJ,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;;AAqBJ,SAAK,OAAL;AACI,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAUP,IAAI,CAACG,IAAf,CAAP;;AACJ,SAAK,UAAL;AACI,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAaH,IAAI,CAACG,IAAlB,CAAP;;AACJ,SAAK,OAAL;AACI,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAUH,IAAI,CAACG,IAAf,CAAP;;AACJ;AACA,aAAO,IAAP;AA/BJ;AAiCH,CAnCM","sourcesContent":["import { ListItemText, SvgIcon, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { Spell } from '../models/spell';\n\nexport const ResultRenderer: React.FunctionComponent<{type: string, data: any}> = (props) => {\n    const { data } = props;\n    switch (props.type) {\n        case 'spells':\n            const spell: Spell = data as Spell;\n            return (\n                <>\n                    <ListItemText\n                        primary=\"Brunch this weekend?\"\n                        secondary={\n                            <React.Fragment>\n                                <Typography\n                                    component=\"span\"\n                                    variant=\"body2\"\n                                    color=\"textPrimary\"\n                                >\n                                    {spell.name}\n                                </Typography>\n                                <p><strong>school:</strong> {spell.school}{spell.subschool ? ':'+spell.subschool : ''}</p>\n                                <p><strong>description:</strong> {spell.short_description}</p>\n                                <p><strong>level:</strong> {spell.spell_level}</p>\n                            </React.Fragment>\n                        }\n                    />\n                </>\n            );\n        case 'feats':\n            return <p>feat: {data.name}</p>\n        case 'monsters':\n            return <p>monster: {data.name}</p>\n        case 'items':\n            return <p>item: {data.name}</p>\n        default:\n        return null;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}