{"ast":null,"code":"var _jsxFileName = \"/Users/trevoratlas/projects/pathfinder-search/frontend/components/VirtualizedList.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, ListItem, ListItemText } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { FixedSizeList } from 'react-window';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      width: '100%',\n      height: 400,\n      maxWidth: 300,\n      backgroundColor: '#ddd'\n    }\n  });\n});\n\nfunction renderRow(props) {\n  var index = props.index,\n      style = props.style;\n  return __jsx(ListItem, {\n    button: true,\n    style: style,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(ListItemText, {\n    primary: \"Item \".concat(index + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport var VirtualizedList = function VirtualizedList(props) {\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(FixedSizeList, {\n    height: 400,\n    width: 300,\n    itemSize: 46,\n    itemCount: 200,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, renderRow));\n};","map":{"version":3,"sources":["/Users/trevoratlas/projects/pathfinder-search/frontend/components/VirtualizedList.tsx"],"names":["React","createStyles","ListItem","ListItemText","makeStyles","FixedSizeList","useStyles","theme","root","width","height","maxWidth","backgroundColor","renderRow","props","index","style","VirtualizedList","classes"],"mappings":";;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,YAAjC,QAAqD,mBAArD;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,aAAT,QAAuD,cAAvD;AAEA,IAAMC,SAAS,GAAGF,UAAU,CAAC,UAACG,KAAD;AAAA,SACzBN,YAAY,CAAC;AACTO,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAE,MADL;AAEFC,MAAAA,MAAM,EAAE,GAFN;AAGFC,MAAAA,QAAQ,EAAE,GAHR;AAIFC,MAAAA,eAAe,EAAE;AAJf;AADG,GAAD,CADa;AAAA,CAAD,CAA5B;;AAUA,SAASC,SAAT,CAAmBC,KAAnB,EAAmD;AAAA,MACvCC,KADuC,GACtBD,KADsB,CACvCC,KADuC;AAAA,MAChCC,KADgC,GACtBF,KADsB,CAChCE,KADgC;AAG/C,SACI,MAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAiB,IAAA,KAAK,EAAEA,KAAxB;AAA+B,IAAA,GAAG,EAAED,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AAAc,IAAA,OAAO,iBAAUA,KAAK,GAAG,CAAlB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH;;AACD,OAAO,IAAME,eAAoG,GAAG,SAAvGA,eAAuG,CAACH,KAAD,EAAW;AAC3H,MAAMI,OAAO,GAAGZ,SAAS,EAAzB;AAEA,SACI;AAAK,IAAA,SAAS,EAAEY,OAAO,CAACV,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,MAAM,EAAE,GAAvB;AAA4B,IAAA,KAAK,EAAE,GAAnC;AAAwC,IAAA,QAAQ,EAAE,EAAlD;AAAsD,IAAA,SAAS,EAAE,GAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKK,SADL,CADJ,CADJ;AAOH,CAVM","sourcesContent":["import { ReactComponentLike } from 'prop-types';\nimport React from 'react';\nimport { createStyles, ListItem, ListItemText } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { FixedSizeList, ListChildComponentProps } from 'react-window';\n\nconst useStyles = makeStyles((theme: any) =>\n    createStyles({\n        root: {\n            width: '100%',\n            height: 400,\n            maxWidth: 300,\n            backgroundColor: '#ddd'\n        },\n    }),\n);\nfunction renderRow(props: ListChildComponentProps) {\n    const { index, style } = props;\n\n    return (\n        <ListItem button style={style} key={index}>\n            <ListItemText primary={`Item ${index + 1}`} />\n        </ListItem>\n    );\n}\nexport const VirtualizedList: React.FunctionComponent<{type: string; items: any[]; renderer: ReactComponentLike}> = (props) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <FixedSizeList height={400} width={300} itemSize={46} itemCount={200}>\n                {renderRow}\n            </FixedSizeList>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}