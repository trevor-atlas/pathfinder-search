{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/trevoratlas/projects/pathfinder-search/frontend/components/ResultRenderer.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nexport var ResultRenderer = function ResultRenderer(props) {\n  var data = props.data;\n\n  switch (props.type) {\n    case 'spells':\n      return __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 5,\n          columnNumber: 20\n        }\n      }, \"spell: \", data.name);\n\n    case 'feats':\n      return __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 20\n        }\n      }, \"feat: \", data.name);\n\n    case 'monsters':\n      return __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 20\n        }\n      }, \"monster: \", data.name);\n\n    case 'items':\n      return __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 20\n        }\n      }, \"item: \", data.name);\n\n    default:\n      return null;\n  }\n};","map":{"version":3,"sources":["/Users/trevoratlas/projects/pathfinder-search/frontend/components/ResultRenderer.tsx"],"names":["ResultRenderer","props","data","type","name"],"mappings":";;;;;AAAA,OAAO,IAAMA,cAAkE,GAAG,SAArEA,cAAqE,CAACC,KAAD,EAAW;AAAA,MACjFC,IADiF,GACxED,KADwE,CACjFC,IADiF;;AAEzF,UAAQD,KAAK,CAACE,IAAd;AACI,SAAK,QAAL;AACI,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAWD,IAAI,CAACE,IAAhB,CAAP;;AACJ,SAAK,OAAL;AACI,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAUF,IAAI,CAACE,IAAf,CAAP;;AACJ,SAAK,UAAL;AACI,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAaF,IAAI,CAACE,IAAlB,CAAP;;AACJ,SAAK,OAAL;AACI,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAUF,IAAI,CAACE,IAAf,CAAP;;AACJ;AACA,aAAO,IAAP;AAVJ;AAYH,CAdM","sourcesContent":["export const ResultRenderer: React.FunctionComponent<{type: string, data: any}> = (props) => {\n    const { data } = props;\n    switch (props.type) {\n        case 'spells':\n            return <p>spell: {data.name}</p>\n        case 'feats':\n            return <p>feat: {data.name}</p>\n        case 'monsters':\n            return <p>monster: {data.name}</p>\n        case 'items':\n            return <p>item: {data.name}</p>\n        default:\n        return null;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}